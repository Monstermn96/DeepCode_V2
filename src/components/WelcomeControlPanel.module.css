.controlPanel {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.preferences {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1.5rem;
}

.preferenceSection {
  background: rgba(255, 255, 255, 0.03);
  border-radius: var(--border-radius);
  border: 1px solid var(--border-color);
  overflow: hidden;
}

.preferenceHeader {
  padding: 1rem;
  background: rgba(255, 255, 255, 0.05);
  border-bottom: 1px solid var(--border-color);
}

.preferenceHeader h3 {
  margin: 0;
  color: var(--text-primary);
  font-size: 1.25rem;
  text-align: center;
}

.preferenceContent {
  padding: 1.5rem;
}

.textarea {
  width: 100%;
  min-height: 120px;
  padding: 1rem;
  background: var(--background-dark);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  color: var(--text-primary);
  font-size: 1rem;
  resize: vertical;
  transition: all 0.2s ease;
}

.textarea:hover {
  border-color: var(--primary-color);
}

.textarea:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.2);
}

.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.checkboxLabel {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.75rem;
  background: rgba(255, 255, 255, 0.05);
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: all 0.2s ease;
  user-select: none;
  color: var(--text-primary);
}

.checkboxLabel:hover {
  background: rgba(255, 255, 255, 0.08);
  transform: translateY(-1px);
}

.checkboxLabel input[type="checkbox"] {
  width: 20px;
  height: 20px;
  margin: 0;
  border: 2px solid var(--border-color);
  border-radius: 4px;
  background: transparent;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
  appearance: none;
}

.checkboxLabel input[type="checkbox"]:checked {
  border-color: var(--primary-color);
  background: var(--primary-color);
}

.checkboxLabel input[type="checkbox"]:checked::after {
  content: 'âœ“';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 12px;
}

.buttonContainer {
  display: flex;
  justify-content: center;
  margin-top: 2rem;
}

.button {
  padding: 1rem 2rem;
  font-size: 1.1rem;
  font-weight: 500;
  background: linear-gradient(135deg, var(--primary-color), var(--primary-hover));
  border: none;
  border-radius: var(--border-radius);
  color: white;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  gap: 0.75rem;
  transition: all 0.2s ease;
}

.button:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(33, 150, 243, 0.3);
}

.button:disabled {
  opacity: 0.7;
  cursor: not-allowed;
}

.buttonArrow {
  font-size: 1.2rem;
  transition: transform 0.3s ease;
}

.button:hover:not(:disabled) .buttonArrow {
  transform: translateX(4px);
}

.loadingSpinner {
  width: 20px;
  height: 20px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top: 2px solid white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@media (max-width: 768px) {
  .preferences {
    grid-template-columns: 1fr;
  }
  
  .preferenceContent {
    padding: 1rem;
  }
  
  .button {
    width: 100%;
    justify-content: center;
  }
} 